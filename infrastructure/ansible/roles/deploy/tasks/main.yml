---

- name: Check if image exists in ECR
  shell: |
    [ \"{{appversion}}\" =  $(aws ecr describe-images --repository-name=main --regio=eu-north-1 --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]') ]
  any_errors_fatal: true

- name: Check if image exists locally
  become: true
  shell: |
    docker images --filter=reference='*main' --format '"\{\{.Tag\}\}"'
    [ $(docker images "*/main" --format '"\{\{.Tag\}\}"') =  $(aws ecr describe-images --repository-name=main --region=eu-north-1 --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]') ] && echo true || echo false
  register: existsLocal

- name: Cleanup
  become: true
  shell: |
    docker stop $(docker ps -q)
    docker rm $(docker ps -aq)
    docker rmi $(docker images -q)
  when: existsLocal.stdout != true
  ignore_errors: true

- name: Get image from ECR
  become: true
  shell: |
    docker pull "{{url}}/{{repo}}:{{appversion}}"
  when: existsLocal.stdout != true

- name: Run container
  become: true
  shell: |
    docker run -itd -p 80:8080 --name=petclinic {{url}}/{{repo}}:{{appversion}}